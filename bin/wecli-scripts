#!/usr/bin/env node
const commander = require('commander')
const log = require('@zooey1184/log')

const mini = require('minimist')
const argvs = mini(process.argv)
const packageJson = require('../package.json');
const Serve = require('../scripts/start')

let actionType = ''
const program = new commander.Command(packageJson.name)
  .version(packageJson.version)
  .arguments('<action-type>')
  .usage(`${log.success(`{{<action-type>}} [options]`)}`)
  .action(type => {
    actionType = type;
  })
  .allowUnknownOption()
  .on('--help', () => {
    log.success(`   Only {{<action-type>}} is required, 
    this is script params exp: wecli-script start || wecli-script build`)
  })
  .parse(process.argv);

const [n, r, s, ..._argvs] = argvs._
const query = {}
if (_argvs && _argvs.length) {
  _argvs.forEach(item => {
    if (item.match(/\=/)) {
      const [k,v] = item.split('=')
      query[k] = v
    }
  })
}

const obj = {}
if (argvs && (query.p || query.e)) {
  if (query.p) {
    const params = query.p.split(',').filter(item => !!item)
    obj.p = params
  }
  if (query.e) {
    obj.e = query.e
  }
}
const server = new Serve(obj)
const entryMap = server.start()
if (actionType === 'start') {
  server.cli(`vue-cli-service serve`, entryMap)
}

server.cli(`vue-cli-service ${actionType}`, entryMap)